---
import DocsLayout from "@layouts/DocsLayout.astro";
import { generateTypeData } from "@config/io/generateTypeData";

export async function getStaticPaths() {
  const routes = await generateTypeData();

  return routes
    .filter(route => route.name === "index")
    .map(route => {
      const children: { [key: string]: string } = {};
      route.data.contains?.map(childName =>
        routes
          .filter(route => route.name !== "index")
          .filter(childData => childData.name === childName)
          .map(childData => {
            children[childName] = childData.data.description;
          })
      );
      return {
        params: { type: route.type, name: route.type },
        props: { route, children },
      };
    });
}
const { route, children } = Astro.props;
---

<DocsLayout
  title={route.type + " Type Documentation"}
  description="Quickshell Type Documentation"
>
  <hr />
  <h2 class="typedocs-title">{route.type[0].toUpperCase() + route.type.slice(1)} Definitions</h2>
  <div class="root-nav">
    {route.data.contains!.map((childName:string) => 
      (
      <div class="root-nav-entry">
        <a class="root-nav-link" href={`/docs/types/${route.data.module === "index"
        ? route.data.name
        : route.data.module}/${childName}`}>
        {childName}
        </a>
        <span class="root-nav-desc">{children[childName] || "See Configuration"}</span>
      </div>
      )
    )}
  </div>
</DocsLayout>
